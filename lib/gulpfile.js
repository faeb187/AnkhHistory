// Generated by CoffeeScript 2.5.1
/*
  GULPFILE
  @AUTHOR faeb187
*/
var coffee, gulp, poststyl, pug, rename, rucksack, rupture, seq, shell, stylus;

// @REQUIRE npm modules
gulp = require("gulp");

rename = require("gulp-rename");

shell = require("gulp-shell");

seq = require("run-sequence");

coffee = require("gulp-coffee");

pug = require("gulp-pug");

stylus = require("gulp-stylus");

rupture = require("rupture");

poststyl = require("poststylus");

rucksack = require("rucksack-css");

// ANKH config
gulp.task("ankh", function() {
  return gulp.src("src/ankh.coffee").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js"));
});

// lang libraries
gulp.task("i18n", function() {
  return gulp.src("src/i18n/*.coffee").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/i18n"));
});

// network
gulp.task("network", function() {
  return gulp.src("src/network/**/*.coffee").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/network"));
});

// UIs
gulp.task("uis", function() {
  return gulp.src("src/uis/*").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/uis"));
});

// designs
gulp.task("designs", function() {
  return gulp.src("src/designs/*").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/designs"));
});

// sites
gulp.task("sites", function() {
  return gulp.src("src/sites/*").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/sites"));
});

// site confs
gulp.task("conf", function() {
  return gulp.src("src/conf/*").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/conf"));
});

// core files
gulp.task("core", function() {
  return gulp.src("src/core/*.coffee").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js/core"));
});

// app
gulp.task("coffee", function() {
  return gulp.src("src/app.coffee").pipe(coffee({
    bare: true,
    transpile: {
      presets: ["@babel/env"]
    }
  })).pipe(gulp.dest("dst/assets/js"));
});

// pug
gulp.task("pug", function() {
  return gulp.src("src/pug/index.pug").pipe(pug()).pipe(gulp.dest("dst"));
});

// tpls
gulp.task("tpls", function() {
  gulp.src("src/tpls/**/*.pug").pipe(pug()).pipe(gulp.dest("dst/assets/tpls"));
  return gulp.src("src/tpls/**/*.styl").pipe(stylus({
    compress: true,
    use: [
      rupture(),
      poststyl([
        rucksack({
          autoprefixer: true
        })
      ])
    ]
  })).pipe(gulp.dest("dst/assets/tpls"));
});

// stylus
gulp.task("styl", function() {
  return gulp.src("src/styl/main.styl").pipe(stylus({
    compress: true,
    use: [
      rupture({
        scale: "0 400px 600px 800px 1050px 1800px"
      }),
      poststyl([
        rucksack({
          autoprefixer: true
        })
      ])
    ]
  })).pipe(rename("main.min.css")).pipe(gulp.dest("dst/assets/css"));
});

gulp.task("bundle", function() {
  process.chdir("dst/assets/js");
  return gulp.src("*.js", {
    read: false
  }).pipe(shell(["browserify app.js -o ./app.min.js"]));
});

gulp.task("default", gulp.series("ankh", "i18n", "network", "uis", "core", "pug", "styl", "conf", "designs", "sites", "coffee", "bundle"), (done) => {
  return done();
});
